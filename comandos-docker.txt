Check port:

netstat -aof | findstr 5432

# Create Network

docker create network library-network

# Rodar container Postgre na versão 16.3
docker run --name librarydb -e POSTGRES_PASSWORD=postgres -e POSTGRES_USER=postgres -e POSTGRES_DB=library -p 5432:5432 -d --network library-network postgres:16.3

# Rodar Pgadmin 4
docker run --name pgadmin4 -e PGADMIN_DEFAULT_EMAIL=admin@admin.com -e PGADMIN_DEFAULT_PASSWORD=admin -p 15432:80 -d --network library-network dpage/pgadmin4:8.9

#Rodar na AWS
sudo docker run --name libraryapi -e DATASOURCE_URL=jdbc:postgresql://host:5432/library -e DATASOURCE_USERNAME=postgres -e DATASOURCE_PASSWORD=postgres -p 8080:8080 -p 9090:9090 cursosdevbase/libraryapi


# comando para buildar o projeto
./mvnw clean package -DskipTests
export $(grep -v '^#' .env | xargs)
java -jar ./target/libraryapi-0.0.1-SNAPSHOT.jar

# rodando dockerfile
docker build --tag sergiohscl/libraryapi .

# rodando no container o projeto
sudo docker run --name libraryapi-production -e DATASOURCE_URL=jdbc:postgresql://librarydb-prod:5432/library -e USERNAME=postgresprod -e PASSWORD=postgresprod --network library-network -d -p 8080:8080 sergiohscl/libraryapi

# verifica o logs da conexão
sudo docker logs libraryapi-production

# subindo a imagem para dockerhub
sudo docker tag <id image> sergiohscl/libraryapi:latest
sudo docker login
ssudo docker push sergiohscl/libraryapi:latest


# configurando EC2 AWS
sudo yum update
sudo yum install docker
sudo service docker start

# subindo imagem dockerhub para EC2 AWS
sudo docker run --name libraryapi -e DATASOURCE_URL=jdbc:postgresql://libraryapi-database.cp26kecwsp40.us-east-2.rds.amazonaws.com:5432/library -e USERNAME=postgres -e PASSWORD=postgres -p 8080:8080 sergiohscl/libraryapi